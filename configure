#!/bin/bash

cc=gcc
ld=ld
objcopy=objcopy
ar=ar
arch=arm
plat=vexpress-a15
cpu=cortex-a15
cross_prefix=arm-linux-gnueabi-

usage() {
    cat <<-EOF
	Usage: $0 [options]

	Options include:
	    --arch=ARCH            architecture to compile for ($arch)
	    --plat=PLATFORM        platform to compile for ($plat)
	    --cpu=PROCESSOR  cpu to compile for ($arch)
	    --cross-prefix=PREFIX  cross compiler prefix
	    --cc=CC		   c compiler to use ($cc)
	    --ld=LD		   ld linker to use ($ld)
EOF
    exit 1
}

while [[ "$1" = -* ]]; do
    opt="$1"; shift
    arg=
    if [[ "$opt" = *=* ]]; then
	arg="${opt#*=}"
	opt="${opt%%=*}"
    fi
    case "$opt" in
    --arch)
	    arch="$arg"
	    ;;
    --plat)
	    plat="$arg"
	    ;;
    --cpu)
	    cpu="$arg"
	    ;;
	--cross-prefix)
	    cross_prefix="$arg"
	    ;;
	--cc)
	    cc="$arg"
	    ;;
	--ld)
	    ld="$arg"
	    ;;
	--help)
	    usage
	    ;;
	*)
	    usage
	    ;;
    esac
done
[ -z "$cpu" ] && cpu="$arch"

if [ "$cpu" = "arm" ]; then
    cpu="cortex-a15"
fi

# check for dependent 32 bit libraries
if [ "$arch" != "arm" ]; then
cat << EOF > lib_test.c
#include <stdc++.h>
#include <boost_thread-mt.h>
#include <pthread.h>

int main ()
{}
EOF
$cc -m32 -o /dev/null lib_test.c &> /dev/null
exit=$?
if [ $exit -eq 0 ]; then
    api=true
fi
rm -f lib_test.c
fi

# create the config
cat <<EOF > config.mak
export ARCH=$arch
export PLAT=$plat
export PROCESSOR=$cpu
export CC=$cross_prefix$cc
export LD=$cross_prefix$ld
export OBJCOPY=$cross_prefix$objcopy
export AR=$cross_prefix$ar
EOF
